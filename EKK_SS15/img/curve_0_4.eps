%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 139 575 652
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Dienstag, 14. April 2015 11:15 Uhr MESZ
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
708 654 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
708.000 0 l
708.000 654.000 l
0 654.000 l
0 0 l
h
f
0 0 0 RG
3.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 698 644 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
28.0000 626.500 m
28.0000 17.0239 l
S
newpath
190.868 626.500 m
190.868 17.0239 l
S
newpath
353.737 626.500 m
353.737 17.0239 l
S
newpath
516.606 626.500 m
516.606 17.0239 l
S
newpath
679.475 626.500 m
679.475 17.0239 l
S
0.913725 0.913725 0.913725 RG
newpath
60.5737 626.500 m
60.5737 17.0239 l
S
newpath
93.1475 626.500 m
93.1475 17.0239 l
S
newpath
125.721 626.500 m
125.721 17.0239 l
S
newpath
158.295 626.500 m
158.295 17.0239 l
S
newpath
223.442 626.500 m
223.442 17.0239 l
S
newpath
256.016 626.500 m
256.016 17.0239 l
S
newpath
288.590 626.500 m
288.590 17.0239 l
S
newpath
321.163 626.500 m
321.163 17.0239 l
S
newpath
386.311 626.500 m
386.311 17.0239 l
S
newpath
418.885 626.500 m
418.885 17.0239 l
S
newpath
451.459 626.500 m
451.459 17.0239 l
S
newpath
484.032 626.500 m
484.032 17.0239 l
S
newpath
549.180 626.500 m
549.180 17.0239 l
S
newpath
581.754 626.500 m
581.754 17.0239 l
S
newpath
614.327 626.500 m
614.327 17.0239 l
S
newpath
646.901 626.500 m
646.901 17.0239 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
28.0000 626.500 m
679.475 626.500 l
S
newpath
28.0000 474.131 m
679.475 474.131 l
S
newpath
28.0000 321.762 m
679.475 321.762 l
S
newpath
28.0000 169.393 m
679.475 169.393 l
S
newpath
28.0000 17.0239 m
679.475 17.0239 l
S
0.913725 0.913725 0.913725 RG
newpath
28.0000 596.026 m
679.475 596.026 l
S
newpath
28.0000 565.552 m
679.475 565.552 l
S
newpath
28.0000 535.078 m
679.475 535.078 l
S
newpath
28.0000 504.604 m
679.475 504.604 l
S
newpath
28.0000 443.657 m
679.475 443.657 l
S
newpath
28.0000 413.183 m
679.475 413.183 l
S
newpath
28.0000 382.709 m
679.475 382.709 l
S
newpath
28.0000 352.235 m
679.475 352.235 l
S
newpath
28.0000 291.288 m
679.475 291.288 l
S
newpath
28.0000 260.814 m
679.475 260.814 l
S
newpath
28.0000 230.340 m
679.475 230.340 l
S
newpath
28.0000 199.866 m
679.475 199.866 l
S
newpath
28.0000 138.919 m
679.475 138.919 l
S
newpath
28.0000 108.445 m
679.475 108.445 l
S
newpath
28.0000 77.9716 m
679.475 77.9716 l
S
newpath
28.0000 47.4978 m
679.475 47.4978 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
3.00000 w
0 J
1 j
q
q
1.00000 w
2 J
0 j
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 186.368 317.262 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -186.368 -317.262 ] concat
Q
q
1.00000 w
2 J
0 j
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 186.368 317.262 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -186.368 -317.262 ] concat
Q
q
1.00000 w
2 J
0 j
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 186.368 317.262 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -186.368 -317.262 ] concat
Q
q
1.00000 w
2 J
0 j
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 186.368 317.262 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -186.368 -317.262 ] concat
Q
q
0 1.00000 0 RG
25.0000 13.0239 658.475 616.476 rc
newpath
28.0000 626.500 m
28.0000 17.0239 l
S
newpath
679.475 626.500 m
679.475 17.0239 l
S
newpath
28.0000 626.500 m
679.475 626.500 l
S
newpath
28.0000 17.0239 m
679.475 17.0239 l
S
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
0 1.00000 0 RG
[ 1.00000 0 0 1.00000 512.106 12.5239 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -512.106 -12.5239 ] concat
[ 1.00000 0 0 1.00000 512.106 622.000 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -512.106 -622.000 ] concat
Q
q
1.00000 w
2 J
0 j
0 1.00000 0 RG
[ 1.00000 0 0 1.00000 349.237 425.003 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -349.237 -425.003 ] concat
[ 1.00000 0 0 1.00000 349.237 209.520 ] concat
newpath
0 4.00000 m
4.00000 0 l
8.00000 4.00000 l
4.00000 8.00000 l
h
S
[ 1.00000 0 0 1.00000 -349.237 -209.520 ] concat
Q
q
0 0 1.00000 RG
25.0000 13.0239 658.475 616.476 rc
newpath
353.737 429.503 m
354.339 430.101 l
354.941 430.699 l
360.058 435.835 l
365.133 441.007 l
370.169 446.212 l
375.166 451.451 l
380.421 457.037 l
385.636 462.658 l
390.810 468.310 l
395.946 473.993 l
400.921 479.565 l
405.861 485.164 l
410.767 490.790 l
415.640 496.440 l
420.663 502.327 l
425.652 508.239 l
430.608 514.175 l
435.533 520.133 l
441.244 527.120 l
446.914 534.136 l
452.545 541.180 l
458.137 548.250 l
463.433 555.016 l
468.696 561.804 l
473.926 568.614 l
479.125 575.445 l
484.358 582.386 l
489.561 589.346 l
494.733 596.327 l
499.876 603.327 l
502.535 606.969 l
505.186 610.615 l
507.830 614.267 l
510.466 617.923 l
511.123 618.838 l
512.438 620.669 l
513.946 622.775 l
514.797 623.965 l
514.797 623.965 l
S
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
q
0 0 1.00000 RG
25.0000 13.0239 658.475 616.476 rc
newpath
353.737 429.503 m
353.436 429.204 l
353.135 428.905 l
352.833 428.607 l
352.531 428.308 l
347.336 423.214 l
342.096 418.160 l
336.809 413.149 l
331.473 408.184 l
325.446 402.687 l
319.354 397.254 l
313.193 391.890 l
306.959 386.599 l
302.176 382.633 l
297.347 378.715 l
292.472 374.848 l
287.548 371.036 l
282.573 367.282 l
277.545 363.591 l
272.462 359.966 l
267.321 356.412 l
264.006 354.183 l
260.665 351.987 l
257.298 349.827 l
253.904 347.704 l
250.482 345.620 l
247.032 343.579 l
243.551 341.583 l
240.039 339.634 l
237.733 338.392 l
235.413 337.172 l
233.079 335.977 l
230.730 334.807 l
228.366 333.664 l
225.987 332.549 l
223.591 331.465 l
221.180 330.412 l
219.595 329.743 l
218.002 329.088 l
216.402 328.450 l
214.795 327.828 l
213.180 327.225 l
211.557 326.640 l
209.926 326.075 l
208.287 325.530 l
207.230 325.193 l
206.169 324.865 l
205.105 324.547 l
204.038 324.240 l
202.966 323.944 l
201.891 323.660 l
200.813 323.388 l
199.730 323.131 l
199.068 322.980 l
198.403 322.836 l
197.738 322.697 l
197.071 322.565 l
196.559 322.468 l
196.046 322.376 l
195.532 322.288 l
195.017 322.204 l
194.826 322.175 l
194.635 322.146 l
194.444 322.118 l
194.253 322.091 l
194.217 322.086 l
194.181 322.081 l
194.145 322.076 l
194.109 322.071 l
194.109 322.071 l
S
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
q
0 0 1.00000 RG
25.0000 13.0239 658.475 616.476 rc
newpath
353.737 214.020 m
353.436 214.319 l
353.135 214.618 l
352.833 214.916 l
352.531 215.215 l
347.336 220.309 l
342.096 225.363 l
336.809 230.374 l
331.473 235.339 l
325.446 240.836 l
319.354 246.269 l
313.193 251.633 l
306.959 256.925 l
302.176 260.890 l
297.347 264.808 l
292.472 268.675 l
287.548 272.487 l
282.573 276.241 l
277.545 279.933 l
272.462 283.558 l
267.321 287.111 l
264.006 289.340 l
260.665 291.536 l
257.298 293.696 l
253.904 295.819 l
250.482 297.903 l
247.032 299.944 l
243.551 301.940 l
240.039 303.889 l
237.733 305.131 l
235.413 306.351 l
233.079 307.546 l
230.730 308.716 l
228.366 309.859 l
225.987 310.974 l
223.591 312.058 l
221.180 313.111 l
219.595 313.781 l
218.002 314.435 l
216.402 315.073 l
214.795 315.695 l
213.180 316.298 l
211.557 316.883 l
209.926 317.449 l
208.287 317.993 l
207.230 318.330 l
206.169 318.658 l
205.105 318.976 l
204.038 319.283 l
202.966 319.579 l
201.891 319.863 l
200.813 320.135 l
199.730 320.392 l
199.068 320.543 l
198.403 320.687 l
197.738 320.826 l
197.071 320.958 l
196.559 321.055 l
196.046 321.147 l
195.532 321.235 l
195.017 321.319 l
194.826 321.348 l
194.635 321.377 l
194.444 321.405 l
194.253 321.432 l
194.217 321.437 l
194.181 321.442 l
194.145 321.447 l
194.109 321.452 l
194.109 321.452 l
S
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
q
0 0 1.00000 RG
25.0000 13.0239 658.475 616.476 rc
newpath
353.737 214.020 m
354.339 213.422 l
354.941 212.824 l
360.058 207.688 l
365.133 202.517 l
370.169 197.311 l
375.166 192.072 l
380.421 186.486 l
385.636 180.865 l
390.810 175.213 l
395.946 169.530 l
400.921 163.958 l
405.861 158.359 l
410.767 152.734 l
415.640 147.084 l
420.663 141.196 l
425.652 135.284 l
430.608 129.349 l
435.533 123.390 l
441.244 116.403 l
446.914 109.387 l
452.545 102.343 l
458.137 95.2731 l
463.433 88.5078 l
468.696 81.7197 l
473.926 74.9096 l
479.125 68.0783 l
484.358 61.1378 l
489.561 54.1771 l
494.733 47.1965 l
499.876 40.1967 l
502.535 36.5549 l
505.186 32.9081 l
507.830 29.2565 l
510.466 25.6001 l
511.123 24.6853 l
512.438 22.8547 l
513.520 21.3440 l
514.797 19.5584 l
514.797 19.5584 l
S
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
28.0000 321.762 m
679.475 321.762 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
429 364 13 15 rc
newpath
435.250 370.250 m
435.458 370.468 435.614 370.692 435.718 370.921  c
435.802 371.067 435.927 371.463 436.093 372.109  c
436.656 371.281 l
436.802 371.072 436.981 370.877 437.195 370.695  c
437.408 370.513 437.593 370.385 437.750 370.312  c
437.854 370.270 437.968 370.250 438.093 370.250  c
438.270 370.250 438.414 370.299 438.523 370.398  c
438.632 370.497 438.687 370.614 438.687 370.750  c
438.687 370.916 438.656 371.031 438.593 371.093  c
438.479 371.197 438.343 371.250 438.187 371.250  c
438.093 371.250 438.000 371.229 437.906 371.187  c
437.708 371.125 437.572 371.093 437.500 371.093  c
437.395 371.093 437.276 371.151 437.140 371.265  c
436.880 371.484 436.567 371.911 436.203 372.546  c
436.718 374.718 l
436.802 375.052 436.869 375.252 436.921 375.320  c
436.974 375.388 437.031 375.421 437.093 375.421  c
437.177 375.421 437.281 375.375 437.406 375.281  c
437.635 375.083 437.833 374.828 438.000 374.515  c
438.218 374.625 l
437.947 375.125 437.609 375.541 437.203 375.875  c
436.974 376.062 436.776 376.156 436.609 376.156  c
436.369 376.156 436.182 376.020 436.046 375.750  c
435.953 375.583 435.770 374.875 435.500 373.625  c
434.833 374.770 434.302 375.505 433.906 375.828  c
433.645 376.046 433.395 376.156 433.156 376.156  c
432.989 376.156 432.833 376.093 432.687 375.968  c
432.593 375.875 432.546 375.750 432.546 375.593  c
432.546 375.458 432.593 375.343 432.687 375.250  c
432.781 375.156 432.895 375.109 433.031 375.109  c
433.166 375.109 433.307 375.177 433.453 375.312  c
433.567 375.406 433.656 375.453 433.718 375.453  c
433.760 375.453 433.822 375.421 433.906 375.359  c
434.104 375.192 434.375 374.843 434.718 374.312  c
435.062 373.781 435.286 373.395 435.390 373.156  c
435.130 372.125 434.989 371.583 434.968 371.531  c
434.875 371.250 434.750 371.052 434.593 370.937  c
434.437 370.822 434.203 370.765 433.890 370.765  c
433.796 370.765 433.687 370.770 433.562 370.781  c
433.562 370.546 l
435.250 370.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
28.0000 321.762 m
28.0000 328.572 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 339 15 29 rc
newpath
29.2343 355.328 m
10.7656 355.328 l
10.7656 353.875 l
29.2343 353.875 l
29.2343 355.328 l
h
f
Q
newpath
26.0156 353.843 m
26.0156 351.729 26.3333 349.908 26.9687 348.382  c
27.6041 346.856 28.4531 345.718 29.5156 344.968  c
30.3385 344.375 31.1875 344.078 32.0625 344.078  c
33.4791 344.078 34.7552 344.802 35.8906 346.250  c
37.2968 348.041 38.0000 350.474 38.0000 353.546  c
38.0000 355.703 37.6901 357.533 37.0703 359.039  c
36.4505 360.544 35.6614 361.635 34.7031 362.312  c
33.7447 362.989 32.8177 363.328 31.9218 363.328  c
30.1510 363.328 28.6770 362.286 27.5000 360.203  c
26.5104 358.442 26.0156 356.322 26.0156 353.843  c
h
28.6875 354.187 m
28.6875 356.739 29.0052 358.817 29.6406 360.421  c
30.1614 361.786 30.9322 362.468 31.9531 362.468  c
32.4531 362.468 32.9661 362.247 33.4921 361.804  c
34.0182 361.362 34.4166 360.619 34.6875 359.578  c
35.1145 358.015 35.3281 355.807 35.3281 352.953  c
35.3281 350.838 35.1093 349.072 34.6718 347.656  c
34.3385 346.614 33.9114 345.875 33.3906 345.437  c
33.0156 345.135 32.5677 344.984 32.0468 344.984  c
31.4218 344.984 30.8697 345.260 30.3906 345.812  c
29.7343 346.572 29.2864 347.763 29.0468 349.382  c
28.8072 351.002 28.6875 352.604 28.6875 354.187  c
h
42.5000 360.343 m
42.9270 360.343 43.2864 360.492 43.5781 360.789  c
43.8697 361.085 44.0156 361.442 44.0156 361.859  c
44.0156 362.286 43.8671 362.648 43.5703 362.945  c
43.2734 363.242 42.9166 363.390 42.5000 363.390  c
42.0833 363.390 41.7265 363.242 41.4296 362.945  c
41.1328 362.648 40.9843 362.286 40.9843 361.859  c
40.9843 361.432 41.1328 361.072 41.4296 360.781  c
41.7265 360.489 42.0833 360.343 42.5000 360.343  c
h
58.1562 344.453 m
57.0937 346.781 l
51.5156 346.781 l
50.2968 349.265 l
52.7135 349.630 54.6250 350.531 56.0312 351.968  c
57.2500 353.208 57.8593 354.666 57.8593 356.343  c
57.8593 357.312 57.6614 358.213 57.2656 359.046  c
56.8697 359.880 56.3697 360.588 55.7656 361.171  c
55.1614 361.755 54.4895 362.224 53.7500 362.578  c
52.7083 363.078 51.6354 363.328 50.5312 363.328  c
49.4166 363.328 48.6067 363.138 48.1015 362.757  c
47.5963 362.377 47.3437 361.963 47.3437 361.515  c
47.3437 361.255 47.4479 361.026 47.6562 360.828  c
47.8645 360.630 48.1302 360.531 48.4531 360.531  c
48.6822 360.531 48.8880 360.567 49.0703 360.640  c
49.2526 360.713 49.5572 360.901 49.9843 361.203  c
50.6614 361.682 51.3541 361.921 52.0625 361.921  c
53.1250 361.921 54.0599 361.518 54.8671 360.710  c
55.6744 359.903 56.0781 358.921 56.0781 357.765  c
56.0781 356.640 55.7187 355.593 55.0000 354.625  c
54.2812 353.656 53.2864 352.906 52.0156 352.375  c
51.0260 351.968 49.6718 351.734 47.9531 351.671  c
51.5156 344.453 l
58.1562 344.453 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 321.762 m
190.868 328.572 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
179.015 350.843 m
179.015 348.729 179.333 346.908 179.968 345.382  c
180.604 343.856 181.453 342.718 182.515 341.968  c
183.338 341.375 184.187 341.078 185.062 341.078  c
186.479 341.078 187.755 341.802 188.890 343.250  c
190.296 345.041 191.000 347.474 191.000 350.546  c
191.000 352.703 190.690 354.533 190.070 356.039  c
189.450 357.544 188.661 358.635 187.703 359.312  c
186.744 359.989 185.817 360.328 184.921 360.328  c
183.151 360.328 181.677 359.286 180.500 357.203  c
179.510 355.442 179.015 353.322 179.015 350.843  c
h
181.687 351.187 m
181.687 353.739 182.005 355.817 182.640 357.421  c
183.161 358.786 183.932 359.468 184.953 359.468  c
185.453 359.468 185.966 359.247 186.492 358.804  c
187.018 358.362 187.416 357.619 187.687 356.578  c
188.114 355.015 188.328 352.807 188.328 349.953  c
188.328 347.838 188.109 346.072 187.671 344.656  c
187.338 343.614 186.911 342.875 186.390 342.437  c
186.015 342.135 185.567 341.984 185.046 341.984  c
184.421 341.984 183.869 342.260 183.390 342.812  c
182.734 343.572 182.286 344.763 182.046 346.382  c
181.807 348.002 181.687 349.604 181.687 351.187  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
353.737 321.762 m
353.737 328.572 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
342.015 353.843 m
342.015 351.729 342.333 349.908 342.968 348.382  c
343.604 346.856 344.453 345.718 345.515 344.968  c
346.338 344.375 347.187 344.078 348.062 344.078  c
349.479 344.078 350.755 344.802 351.890 346.250  c
353.296 348.041 354.000 350.474 354.000 353.546  c
354.000 355.703 353.690 357.533 353.070 359.039  c
352.450 360.544 351.661 361.635 350.703 362.312  c
349.744 362.989 348.817 363.328 347.921 363.328  c
346.151 363.328 344.677 362.286 343.500 360.203  c
342.510 358.442 342.015 356.322 342.015 353.843  c
h
344.687 354.187 m
344.687 356.739 345.005 358.817 345.640 360.421  c
346.161 361.786 346.932 362.468 347.953 362.468  c
348.453 362.468 348.966 362.247 349.492 361.804  c
350.018 361.362 350.416 360.619 350.687 359.578  c
351.114 358.015 351.328 355.807 351.328 352.953  c
351.328 350.838 351.109 349.072 350.671 347.656  c
350.338 346.614 349.911 345.875 349.390 345.437  c
349.015 345.135 348.567 344.984 348.046 344.984  c
347.421 344.984 346.869 345.260 346.390 345.812  c
345.734 346.572 345.286 347.763 345.046 349.382  c
344.807 351.002 344.687 352.604 344.687 354.187  c
h
358.500 360.343 m
358.927 360.343 359.286 360.492 359.578 360.789  c
359.869 361.085 360.015 361.442 360.015 361.859  c
360.015 362.286 359.867 362.648 359.570 362.945  c
359.273 363.242 358.916 363.390 358.500 363.390  c
358.083 363.390 357.726 363.242 357.429 362.945  c
357.132 362.648 356.984 362.286 356.984 361.859  c
356.984 361.432 357.132 361.072 357.429 360.781  c
357.726 360.489 358.083 360.343 358.500 360.343  c
h
374.156 344.453 m
373.093 346.781 l
367.515 346.781 l
366.296 349.265 l
368.713 349.630 370.625 350.531 372.031 351.968  c
373.250 353.208 373.859 354.666 373.859 356.343  c
373.859 357.312 373.661 358.213 373.265 359.046  c
372.869 359.880 372.369 360.588 371.765 361.171  c
371.161 361.755 370.489 362.224 369.750 362.578  c
368.708 363.078 367.635 363.328 366.531 363.328  c
365.416 363.328 364.606 363.138 364.101 362.757  c
363.596 362.377 363.343 361.963 363.343 361.515  c
363.343 361.255 363.447 361.026 363.656 360.828  c
363.864 360.630 364.130 360.531 364.453 360.531  c
364.682 360.531 364.888 360.567 365.070 360.640  c
365.252 360.713 365.557 360.901 365.984 361.203  c
366.661 361.682 367.354 361.921 368.062 361.921  c
369.125 361.921 370.059 361.518 370.867 360.710  c
371.674 359.903 372.078 358.921 372.078 357.765  c
372.078 356.640 371.718 355.593 371.000 354.625  c
370.281 353.656 369.286 352.906 368.015 352.375  c
367.026 351.968 365.671 351.734 363.953 351.671  c
367.515 344.453 l
374.156 344.453 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
516.606 321.762 m
516.606 328.572 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
517.281 346.281 m
521.796 344.078 l
522.250 344.078 l
522.250 359.734 l
522.250 360.776 522.291 361.424 522.375 361.679  c
522.458 361.934 522.638 362.130 522.914 362.265  c
523.190 362.401 523.744 362.479 524.578 362.500  c
524.578 363.000 l
517.609 363.000 l
517.609 362.500 l
518.484 362.479 519.049 362.401 519.304 362.265  c
519.559 362.130 519.737 361.953 519.835 361.734  c
519.934 361.515 519.984 360.849 519.984 359.734  c
519.984 349.718 l
519.984 348.375 519.942 347.510 519.859 347.125  c
519.786 346.833 519.666 346.619 519.500 346.484  c
519.333 346.349 519.130 346.281 518.890 346.281  c
518.557 346.281 518.088 346.421 517.484 346.703  c
517.281 346.281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
679.475 321.762 m
679.475 328.572 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
670.281 346.281 m
674.796 344.078 l
675.250 344.078 l
675.250 359.734 l
675.250 360.776 675.291 361.424 675.375 361.679  c
675.458 361.934 675.638 362.130 675.914 362.265  c
676.190 362.401 676.744 362.479 677.578 362.500  c
677.578 363.000 l
670.609 363.000 l
670.609 362.500 l
671.484 362.479 672.049 362.401 672.304 362.265  c
672.559 362.130 672.737 361.953 672.835 361.734  c
672.934 361.515 672.984 360.849 672.984 359.734  c
672.984 349.718 l
672.984 348.375 672.942 347.510 672.859 347.125  c
672.786 346.833 672.666 346.619 672.500 346.484  c
672.333 346.349 672.130 346.281 671.890 346.281  c
671.557 346.281 671.088 346.421 670.484 346.703  c
670.281 346.281 l
h
684.500 360.343 m
684.927 360.343 685.286 360.492 685.578 360.789  c
685.869 361.085 686.015 361.442 686.015 361.859  c
686.015 362.286 685.867 362.648 685.570 362.945  c
685.273 363.242 684.916 363.390 684.500 363.390  c
684.083 363.390 683.726 363.242 683.429 362.945  c
683.132 362.648 682.984 362.286 682.984 361.859  c
682.984 361.432 683.132 361.072 683.429 360.781  c
683.726 360.489 684.083 360.343 684.500 360.343  c
h
700.156 344.453 m
699.093 346.781 l
693.515 346.781 l
692.296 349.265 l
694.713 349.630 696.625 350.531 698.031 351.968  c
699.250 353.208 699.859 354.666 699.859 356.343  c
699.859 357.312 699.661 358.213 699.265 359.046  c
698.869 359.880 698.369 360.588 697.765 361.171  c
697.161 361.755 696.489 362.224 695.750 362.578  c
694.708 363.078 693.635 363.328 692.531 363.328  c
691.416 363.328 690.606 363.138 690.101 362.757  c
689.596 362.377 689.343 361.963 689.343 361.515  c
689.343 361.255 689.447 361.026 689.656 360.828  c
689.864 360.630 690.130 360.531 690.453 360.531  c
690.682 360.531 690.888 360.567 691.070 360.640  c
691.252 360.713 691.557 360.901 691.984 361.203  c
692.661 361.682 693.354 361.921 694.062 361.921  c
695.125 361.921 696.059 361.518 696.867 360.710  c
697.674 359.903 698.078 358.921 698.078 357.765  c
698.078 356.640 697.718 355.593 697.000 354.625  c
696.281 353.656 695.286 352.906 694.015 352.375  c
693.026 351.968 691.671 351.734 689.953 351.671  c
693.515 344.453 l
700.156 344.453 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
60.5737 321.762 m
60.5737 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
93.1475 321.762 m
93.1475 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
125.721 321.762 m
125.721 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
158.295 321.762 m
158.295 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
223.442 321.762 m
223.442 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
256.016 321.762 m
256.016 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
288.590 321.762 m
288.590 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
321.163 321.762 m
321.163 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
386.311 321.762 m
386.311 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
418.885 321.762 m
418.885 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
451.459 321.762 m
451.459 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
484.032 321.762 m
484.032 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
549.180 321.762 m
549.180 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
581.754 321.762 m
581.754 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
614.327 321.762 m
614.327 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
646.901 321.762 m
646.901 325.167 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
190.868 626.500 m
190.868 17.0239 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
107 162 13 15 rc
newpath
113.078 168.250 m
113.224 168.500 113.322 168.731 113.375 168.945  c
113.427 169.158 113.484 169.578 113.546 170.203  c
113.812 173.328 l
114.072 173.026 114.442 172.541 114.921 171.875  c
115.151 171.552 115.437 171.114 115.781 170.562  c
115.989 170.229 116.119 169.994 116.171 169.859  c
116.192 169.786 116.203 169.713 116.203 169.640  c
116.203 169.599 116.187 169.562 116.156 169.531  c
116.125 169.500 116.046 169.463 115.921 169.421  c
115.796 169.380 115.695 169.307 115.617 169.203  c
115.539 169.099 115.500 168.974 115.500 168.828  c
115.500 168.661 115.549 168.523 115.648 168.414  c
115.747 168.304 115.875 168.250 116.031 168.250  c
116.218 168.250 116.377 168.328 116.507 168.484  c
116.638 168.640 116.703 168.854 116.703 169.125  c
116.703 169.458 116.588 169.841 116.359 170.273  c
116.130 170.705 115.690 171.364 115.039 172.250  c
114.388 173.135 113.599 174.104 112.671 175.156  c
112.036 175.875 111.562 176.330 111.250 176.523  c
110.937 176.716 110.671 176.812 110.453 176.812  c
110.317 176.812 110.200 176.760 110.101 176.656  c
110.002 176.552 109.953 176.437 109.953 176.312  c
109.953 176.145 110.023 175.994 110.164 175.859  c
110.304 175.724 110.453 175.656 110.609 175.656  c
110.692 175.656 110.765 175.677 110.828 175.718  c
110.859 175.739 110.895 175.799 110.937 175.898  c
110.979 175.997 111.015 176.062 111.046 176.093  c
111.067 176.114 111.093 176.125 111.125 176.125  c
111.145 176.125 111.187 176.104 111.250 176.062  c
111.489 175.916 111.760 175.687 112.062 175.375  c
112.468 174.958 112.770 174.619 112.968 174.359  c
112.609 170.343 l
112.557 169.677 112.471 169.270 112.351 169.125  c
112.231 168.979 112.031 168.906 111.750 168.906  c
111.656 168.906 111.494 168.921 111.265 168.953  c
111.218 168.718 l
113.078 168.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 644.000 l
698.000 644.000 l
698.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
190.868 626.500 m
184.058 626.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
151 618 15 29 rc
newpath
174.234 634.328 m
155.765 634.328 l
155.765 632.875 l
174.234 632.875 l
174.234 634.328 l
h
f
Q
newpath
173.281 625.281 m
177.796 623.078 l
178.250 623.078 l
178.250 638.734 l
178.250 639.776 178.291 640.424 178.375 640.679  c
178.458 640.934 178.638 641.130 178.914 641.265  c
179.190 641.401 179.744 641.479 180.578 641.500  c
180.578 642.000 l
173.609 642.000 l
173.609 641.500 l
174.484 641.479 175.049 641.401 175.304 641.265  c
175.559 641.130 175.737 640.953 175.835 640.734  c
175.934 640.515 175.984 639.849 175.984 638.734  c
175.984 628.718 l
175.984 627.375 175.942 626.510 175.859 626.125  c
175.786 625.833 175.666 625.619 175.500 625.484  c
175.333 625.349 175.130 625.281 174.890 625.281  c
174.557 625.281 174.088 625.421 173.484 625.703  c
173.281 625.281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 474.131 m
184.058 474.131 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
130 466 15 29 rc
newpath
153.234 482.328 m
134.765 482.328 l
134.765 480.875 l
153.234 480.875 l
153.234 482.328 l
h
f
Q
newpath
150.015 480.843 m
150.015 478.729 150.333 476.908 150.968 475.382  c
151.604 473.856 152.453 472.718 153.515 471.968  c
154.338 471.375 155.187 471.078 156.062 471.078  c
157.479 471.078 158.755 471.802 159.890 473.250  c
161.296 475.041 162.000 477.474 162.000 480.546  c
162.000 482.703 161.690 484.533 161.070 486.039  c
160.450 487.544 159.661 488.635 158.703 489.312  c
157.744 489.989 156.817 490.328 155.921 490.328  c
154.151 490.328 152.677 489.286 151.500 487.203  c
150.510 485.442 150.015 483.322 150.015 480.843  c
h
152.687 481.187 m
152.687 483.739 153.005 485.817 153.640 487.421  c
154.161 488.786 154.932 489.468 155.953 489.468  c
156.453 489.468 156.966 489.247 157.492 488.804  c
158.018 488.362 158.416 487.619 158.687 486.578  c
159.114 485.015 159.328 482.807 159.328 479.953  c
159.328 477.838 159.109 476.072 158.671 474.656  c
158.338 473.614 157.911 472.875 157.390 472.437  c
157.015 472.135 156.567 471.984 156.046 471.984  c
155.421 471.984 154.869 472.260 154.390 472.812  c
153.734 473.572 153.286 474.763 153.046 476.382  c
152.807 478.002 152.687 479.604 152.687 481.187  c
h
166.500 487.343 m
166.927 487.343 167.286 487.492 167.578 487.789  c
167.869 488.085 168.015 488.442 168.015 488.859  c
168.015 489.286 167.867 489.648 167.570 489.945  c
167.273 490.242 166.916 490.390 166.500 490.390  c
166.083 490.390 165.726 490.242 165.429 489.945  c
165.132 489.648 164.984 489.286 164.984 488.859  c
164.984 488.432 165.132 488.072 165.429 487.781  c
165.726 487.489 166.083 487.343 166.500 487.343  c
h
182.156 471.453 m
181.093 473.781 l
175.515 473.781 l
174.296 476.265 l
176.713 476.630 178.625 477.531 180.031 478.968  c
181.250 480.208 181.859 481.666 181.859 483.343  c
181.859 484.312 181.661 485.213 181.265 486.046  c
180.869 486.880 180.369 487.588 179.765 488.171  c
179.161 488.755 178.489 489.224 177.750 489.578  c
176.708 490.078 175.635 490.328 174.531 490.328  c
173.416 490.328 172.606 490.138 172.101 489.757  c
171.596 489.377 171.343 488.963 171.343 488.515  c
171.343 488.255 171.447 488.026 171.656 487.828  c
171.864 487.630 172.130 487.531 172.453 487.531  c
172.682 487.531 172.888 487.567 173.070 487.640  c
173.252 487.713 173.557 487.901 173.984 488.203  c
174.661 488.682 175.354 488.921 176.062 488.921  c
177.125 488.921 178.059 488.518 178.867 487.710  c
179.674 486.903 180.078 485.921 180.078 484.765  c
180.078 483.640 179.718 482.593 179.000 481.625  c
178.281 480.656 177.286 479.906 176.015 479.375  c
175.026 478.968 173.671 478.734 171.953 478.671  c
175.515 471.453 l
182.156 471.453 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 321.762 m
184.058 321.762 l
S
Q
q
0 w
newpath
190.868 169.393 m
184.058 169.393 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
150.015 175.843 m
150.015 173.729 150.333 171.908 150.968 170.382  c
151.604 168.856 152.453 167.718 153.515 166.968  c
154.338 166.375 155.187 166.078 156.062 166.078  c
157.479 166.078 158.755 166.802 159.890 168.250  c
161.296 170.041 162.000 172.474 162.000 175.546  c
162.000 177.703 161.690 179.533 161.070 181.039  c
160.450 182.544 159.661 183.635 158.703 184.312  c
157.744 184.989 156.817 185.328 155.921 185.328  c
154.151 185.328 152.677 184.286 151.500 182.203  c
150.510 180.442 150.015 178.322 150.015 175.843  c
h
152.687 176.187 m
152.687 178.739 153.005 180.817 153.640 182.421  c
154.161 183.786 154.932 184.468 155.953 184.468  c
156.453 184.468 156.966 184.247 157.492 183.804  c
158.018 183.362 158.416 182.619 158.687 181.578  c
159.114 180.015 159.328 177.807 159.328 174.953  c
159.328 172.838 159.109 171.072 158.671 169.656  c
158.338 168.614 157.911 167.875 157.390 167.437  c
157.015 167.135 156.567 166.984 156.046 166.984  c
155.421 166.984 154.869 167.260 154.390 167.812  c
153.734 168.572 153.286 169.763 153.046 171.382  c
152.807 173.002 152.687 174.604 152.687 176.187  c
h
166.500 182.343 m
166.927 182.343 167.286 182.492 167.578 182.789  c
167.869 183.085 168.015 183.442 168.015 183.859  c
168.015 184.286 167.867 184.648 167.570 184.945  c
167.273 185.242 166.916 185.390 166.500 185.390  c
166.083 185.390 165.726 185.242 165.429 184.945  c
165.132 184.648 164.984 184.286 164.984 183.859  c
164.984 183.432 165.132 183.072 165.429 182.781  c
165.726 182.489 166.083 182.343 166.500 182.343  c
h
182.156 166.453 m
181.093 168.781 l
175.515 168.781 l
174.296 171.265 l
176.713 171.630 178.625 172.531 180.031 173.968  c
181.250 175.208 181.859 176.666 181.859 178.343  c
181.859 179.312 181.661 180.213 181.265 181.046  c
180.869 181.880 180.369 182.588 179.765 183.171  c
179.161 183.755 178.489 184.224 177.750 184.578  c
176.708 185.078 175.635 185.328 174.531 185.328  c
173.416 185.328 172.606 185.138 172.101 184.757  c
171.596 184.377 171.343 183.963 171.343 183.515  c
171.343 183.255 171.447 183.026 171.656 182.828  c
171.864 182.630 172.130 182.531 172.453 182.531  c
172.682 182.531 172.888 182.567 173.070 182.640  c
173.252 182.713 173.557 182.901 173.984 183.203  c
174.661 183.682 175.354 183.921 176.062 183.921  c
177.125 183.921 178.059 183.518 178.867 182.710  c
179.674 181.903 180.078 180.921 180.078 179.765  c
180.078 178.640 179.718 177.593 179.000 176.625  c
178.281 175.656 177.286 174.906 176.015 174.375  c
175.026 173.968 173.671 173.734 171.953 173.671  c
175.515 166.453 l
182.156 166.453 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 17.0239 m
184.058 17.0239 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
173.281 16.2812 m
177.796 14.0781 l
178.250 14.0781 l
178.250 29.7343 l
178.250 30.7760 178.291 31.4244 178.375 31.6796  c
178.458 31.9349 178.638 32.1302 178.914 32.2656  c
179.190 32.4010 179.744 32.4791 180.578 32.5000  c
180.578 33.0000 l
173.609 33.0000 l
173.609 32.5000 l
174.484 32.4791 175.049 32.4010 175.304 32.2656  c
175.559 32.1302 175.737 31.9531 175.835 31.7343  c
175.934 31.5156 175.984 30.8489 175.984 29.7343  c
175.984 19.7187 l
175.984 18.3750 175.942 17.5104 175.859 17.1250  c
175.786 16.8333 175.666 16.6197 175.500 16.4843  c
175.333 16.3489 175.130 16.2812 174.890 16.2812  c
174.557 16.2812 174.088 16.4218 173.484 16.7031  c
173.281 16.2812 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 596.026 m
187.463 596.026 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 565.552 m
187.463 565.552 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 535.078 m
187.463 535.078 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 504.604 m
187.463 504.604 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 443.657 m
187.463 443.657 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 413.183 m
187.463 413.183 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 382.709 m
187.463 382.709 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 352.235 m
187.463 352.235 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 291.288 m
187.463 291.288 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 260.814 m
187.463 260.814 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 230.340 m
187.463 230.340 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 199.866 m
187.463 199.866 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 138.919 m
187.463 138.919 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 108.445 m
187.463 108.445 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 77.9716 m
187.463 77.9716 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
190.868 47.4978 m
187.463 47.4978 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 708 654 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
